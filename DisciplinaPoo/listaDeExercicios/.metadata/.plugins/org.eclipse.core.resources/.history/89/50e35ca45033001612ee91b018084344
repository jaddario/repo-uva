import java.util.Scanner;

/*
 * O número 3025 possui a seguinte característica: 30 + 25 = 55 => 55*55 = 3025. 
 * Fazer um programa para ler um número inteiro de 4 dígitos e verificar se ele possui essa propriedade.
 * Imprima a primeira parte do número, a segunda parte e o valor da multiplicação. 
 * Caso o usuário digite um número que não tenha 4 dígitos, apresente uma mensagem de erro.
 */

//Refatorar esse código pq tá uma bosta.
public class Lista01Ex10 {
	public static void main(String[] args) {
		Scanner entradaDeNumero = new Scanner(System.in);

		System.out.println("Digite um número com 4 digitos: \n");
		int numeroEscolhido = entradaDeNumero.nextInt();

		int[] vetorDeAlgarismosDoNumeroEscolhido = decompoeNumero(numeroEscolhido);

		if (isAValidNumber(numeroEscolhido)
				&& oNumeroAtendeACaracteristica(
						vetorDeAlgarismosDoNumeroEscolhido, numeroEscolhido)) {
			int somaDasMetades = vetorDeAlgarismosDoNumeroEscolhido[0]
					+ vetorDeAlgarismosDoNumeroEscolhido[1];
			System.out.printf("Primeira Metade: %d \n",
					vetorDeAlgarismosDoNumeroEscolhido[0]);
			System.out.printf("Segunda Metade: %d \n",
					vetorDeAlgarismosDoNumeroEscolhido[1]);
			System.out.printf("O valor da multiplicação: %d \n", somaDasMetades
					* somaDasMetades);
		} else if (isAValidNumber(numeroEscolhido)
				&& !oNumeroAtendeACaracteristica(
						vetorDeAlgarismosDoNumeroEscolhido, numeroEscolhido)) {
			System.out
					.println("O numero é válido, mas não atende à característica");
		} else {
			System.out.println("Numero deve conter 4 algarismos.");
		}
	}

	private static boolean oNumeroAtendeACaracteristica(
			int[] vetorDeAlgarismosDoNumeroEscolhido, int numeroEscolhido) {
		int somaDasMetadesDoNumero = vetorDeAlgarismosDoNumeroEscolhido[0]
				+ vetorDeAlgarismosDoNumeroEscolhido[1];
		return ((somaDasMetadesDoNumero * somaDasMetadesDoNumero) == numeroEscolhido);
	}

	private static int[] decompoeNumero(int numeroEscolhido) {
		char[] arrayDeDigitosDoNumeroEscolhido = String
				.valueOf(numeroEscolhido).toCharArray();
		int[] vetorDeDigitos = new int[2];

		vetorDeDigitos[0] = Integer.parseInt(Character
				.toString(arrayDeDigitosDoNumeroEscolhido[0])
				+ Character.toString(arrayDeDigitosDoNumeroEscolhido[1]));

		vetorDeDigitos[1] = Integer.parseInt(Character
				.toString(arrayDeDigitosDoNumeroEscolhido[2])
				+ Character.toString(arrayDeDigitosDoNumeroEscolhido[3]));

		return vetorDeDigitos;
	}

	private static boolean isAValidNumber(int numeroEscolhido) {
		char[] digitos = String.valueOf(numeroEscolhido).toCharArray();
		return (digitos.length == 4);
	}
}
